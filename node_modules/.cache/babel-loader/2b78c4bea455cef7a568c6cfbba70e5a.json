{"ast":null,"code":"import { url, LOAD_CHARACTERS, LOAD_FAILED } from './types';\n\nconst loadCharacters = characters => ({\n  type: LOAD_CHARACTERS,\n  payload: characters\n});\n\nconst loadFailed = err => ({\n  type: LOAD_FAILED,\n  payload: err\n});\n\nconst fetchData = () => async dispatch => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const characters = data.result;\n    dispatch(loadCharacters(characters.map(character => {\n      const {\n        id,\n        name,\n        alias,\n        gender,\n        description,\n        occupation,\n        quirk,\n        status,\n        images\n      } = character;\n      return {\n        id,\n        name,\n        alias,\n        gender,\n        description,\n        occupation,\n        quirk,\n        status,\n        images\n      };\n    })));\n  } catch (err) {\n    err.description = 'An error occurred. Please try again later.';\n    dispatch(loadFailed(err.description));\n  }\n};\n\nexport default fetchData;","map":{"version":3,"sources":["/Users/niko/Desktop/Microverse/react-redux-project/src/store/actions.js"],"names":["url","LOAD_CHARACTERS","LOAD_FAILED","loadCharacters","characters","type","payload","loadFailed","err","fetchData","dispatch","response","fetch","data","json","result","map","character","id","name","alias","gender","description","occupation","quirk","status","images"],"mappings":"AAAA,SAASA,GAAT,EAAcC,eAAd,EAA+BC,WAA/B,QAAkD,SAAlD;;AAEA,MAAMC,cAAc,GAAIC,UAAD,KAAiB;AACtCC,EAAAA,IAAI,EAAEJ,eADgC;AAEtCK,EAAAA,OAAO,EAAEF;AAF6B,CAAjB,CAAvB;;AAKA,MAAMG,UAAU,GAAIC,GAAD,KAAU;AAC3BH,EAAAA,IAAI,EAAEH,WADqB;AAE3BI,EAAAA,OAAO,EAAEE;AAFkB,CAAV,CAAnB;;AAKA,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1C,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,GAAD,CAA5B;AACA,UAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMV,UAAU,GAAGS,IAAI,CAACE,MAAxB;AAEAL,IAAAA,QAAQ,CACNP,cAAc,CACZC,UAAU,CAACY,GAAX,CAAgBC,SAAD,IAAe;AAC5B,YAAM;AACJC,QAAAA,EADI;AAEJC,QAAAA,IAFI;AAGJC,QAAAA,KAHI;AAIJC,QAAAA,MAJI;AAKJC,QAAAA,WALI;AAMJC,QAAAA,UANI;AAOJC,QAAAA,KAPI;AAQJC,QAAAA,MARI;AASJC,QAAAA;AATI,UAUFT,SAVJ;AAWA,aAAO;AACLC,QAAAA,EADK;AAELC,QAAAA,IAFK;AAGLC,QAAAA,KAHK;AAILC,QAAAA,MAJK;AAKLC,QAAAA,WALK;AAMLC,QAAAA,UANK;AAOLC,QAAAA,KAPK;AAQLC,QAAAA,MARK;AASLC,QAAAA;AATK,OAAP;AAWD,KAvBD,CADY,CADR,CAAR;AA4BD,GAjCD,CAiCE,OAAOlB,GAAP,EAAY;AACZA,IAAAA,GAAG,CAACc,WAAJ,GAAkB,4CAAlB;AACAZ,IAAAA,QAAQ,CAACH,UAAU,CAACC,GAAG,CAACc,WAAL,CAAX,CAAR;AACD;AACF,CAtCD;;AAwCA,eAAeb,SAAf","sourcesContent":["import { url, LOAD_CHARACTERS, LOAD_FAILED } from './types';\n\nconst loadCharacters = (characters) => ({\n  type: LOAD_CHARACTERS,\n  payload: characters,\n});\n\nconst loadFailed = (err) => ({\n  type: LOAD_FAILED,\n  payload: err,\n});\n\nconst fetchData = () => async (dispatch) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const characters = data.result;\n\n    dispatch(\n      loadCharacters(\n        characters.map((character) => {\n          const {\n            id,\n            name,\n            alias,\n            gender,\n            description,\n            occupation,\n            quirk,\n            status,\n            images,\n          } = character;\n          return {\n            id,\n            name,\n            alias,\n            gender,\n            description,\n            occupation,\n            quirk,\n            status,\n            images,\n          };\n        }),\n      ),\n    );\n  } catch (err) {\n    err.description = 'An error occurred. Please try again later.';\n    dispatch(loadFailed(err.description));\n  }\n};\n\nexport default fetchData;\n"]},"metadata":{},"sourceType":"module"}